podTemplate(yaml: '''
            apiVersion: v1
            kind: Pod
            spec:
                containers:
                    - name: centos
                      image: centos
                      command:
                        - sleep
                      args:
                        - 99d
                    - name: gradle
                      image: gradle:jdk8
                      command:
                        - sleep
                      args:
                         - 99d
                    - name: cloud-sdk
                      image: google/cloud-sdk
                      command:
                        - sleep
                      args:
                        - 9999999
                      volumeMounts:
                         - name: shared-storage
                           mountPath: /mnt
                         - name: google-cloud-key
                           mountPath: /var/secrets/google
                      env:
                       - name: GOOGLE_APPLICATION_CREDENTIALS
                         value: /var/secrets/google/umldevops_gke_key.json
                restartPolicy: Never
                volumes:
                  - name: shared-storage
                    persistentVolumeClaim:
                      claimName: jenkins-pv-claim
                  - name: google-cloud-key
                    secret:
                      secretName: sdk-key
''') {
    node(POD_LABEL) {
        stage ('Staging test') {
            try {    
                stage('Deploy to Staging') {
                    container('centos') {
                        git 'https://github.com/anandka2000/umldevops.git'
                        stage('start calculator') {
                            sh '''
                            cd week9/ex2/
                            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
                            chmod +x ./kubectl
                            ./kubectl --context minikube get pods 
                            ./kubectl --context minikube apply -f ./hazelcast.yaml
                            ./kubectl --context minikube apply -f ./calculator.yaml
                            sleep 30
                            ./kubectl --context minikube get pods 
                            cd 
                            '''
                        }
                    }
                }
                stage ('Run test in staing') {
                    container('gradle') {
                        git 'https://github.com/anandka2000/Continuous-Delivery-with-Docker-and-Jenkins-Second-Edition.git'
                        stage('smoke test') {
                           echo 'Hellow I am running in google cloud'
                        }
                    } 
                }
            } catch (Exception E) {
                error ('staging tests failed')
            } // catch
        } //end staging
 
        stage ('Deploy to cloud-sdk') {
            container('cloud-sdk') {
                git 'https://github.com/anandka2000/umldevops.git'
                stage('start calculator') {
                  sh '''
                  echo 'namespaces in the staging environment'
                  kubectl get ns
                  gcloud auth login --cred-file=$GOOGLE_APPLICATION_CREDENTIALS
                  gcloud container clusters get-credentials umlwk9 --region us-central1-a --project umldevops
                  echo 'namespaces in the prod environment'
                  kubectl get ns
                  ''' 
                }
            }
        } // deploy to prod
    } // POD Label
}
